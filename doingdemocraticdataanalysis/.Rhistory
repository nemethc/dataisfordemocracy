install.packages("tinytex")
tyntex::install_tinytex()
tinytex::install_tinytex()
install.packages("tidymodels")
install.packages("rethinking")
install.packages("bookdown")
install.packages("rpivottable")
install.packages("rpivotTable")
![electoral 2016 map](images/map.png)
#creating a new table called "sites_cleaned", starting with the old table "sites"
sites_cleaned <- sites %>%
#switching the order of names that are backwards
mutate(Employee = if_else(Employee == "Knope, Leslie", "Leslie Knope", Employee)) %>%
#seperate employee names into two columns
separate(Employee, into = c("first_name", "last_name")) %>%
#renaming column names to standard format
rename(location = Location,
telecommute_hours =`Telecommute?`,
hire_date = `Hire Date`) %>%
#changing first and last names and locations to Title Case
mutate(first_name = str_to_title(first_name),
last_name = str_to_title(last_name),
location = str_to_title(location)) %>%
#coding location data to three categories, In Office, In Field, or Other
mutate(location = case_when(
str_detect(location, "City Hall") ~ "In Office",
str_detect(location, "Field") ~ "In Field",
str_detect(location, "Street") ~ "In Field",
TRUE ~ "Other"),
#coding hours to numeric
telecommute_hours = case_when(
telecommute_hours == "never" ~ 0,
telecommute_hours == "1 day/week" ~ 8,
telecommute_hours == "40 hours" ~ 40
)
)
library(tidyverse)
sites <- tribble(
~"Employee", ~"Location", ~"Telecommute?", ~"Hire Date",
"ron swanson", "Pawnee City Hall", "never", "Unknown",
"Knope, Leslie", "Field Duty", "1 day/week", "2011-6-1",
"Andy Dwyer", "sullivan street pit", "40 hours", "March 1, 2013",
"Jerry Gergich", "City Hall", "never", "6/1/1985",
"Garry Gergich", "City Hall", "never", "6/1/1985",
"ben wyatt", "Partridge, Minnesota","" , "Jan. 1, 2010"
)
sites %>% datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = 'excel',
searching = FALSE))
library(tidyverse)
library(DT)
sites <- tribble(
~"Employee", ~"Location", ~"Telecommute?", ~"Hire Date",
"ron swanson", "Pawnee City Hall", "never", "Unknown",
"Knope, Leslie", "Field Duty", "1 day/week", "2011-6-1",
"Andy Dwyer", "sullivan street pit", "40 hours", "March 1, 2013",
"Jerry Gergich", "City Hall", "never", "6/1/1985",
"Garry Gergich", "City Hall", "never", "6/1/1985",
"ben wyatt", "Partridge, Minnesota","" , "Jan. 1, 2010"
)
sites %>% datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = 'excel',
searching = FALSE))
#creating a new table called "sites_cleaned", starting with the old table "sites"
sites_cleaned <- sites %>%
#switching the order of names that are backwards
mutate(Employee = if_else(Employee == "Knope, Leslie", "Leslie Knope", Employee)) %>%
#seperate employee names into two columns
separate(Employee, into = c("first_name", "last_name")) %>%
#renaming column names to standard format
rename(location = Location,
telecommute_hours =`Telecommute?`,
hire_date = `Hire Date`) %>%
#changing first and last names and locations to Title Case
mutate(first_name = str_to_title(first_name),
last_name = str_to_title(last_name),
location = str_to_title(location)) %>%
#coding location data to three categories, In Office, In Field, or Other
mutate(location = case_when(
str_detect(location, "City Hall") ~ "In Office",
str_detect(location, "Field") ~ "In Field",
str_detect(location, "Street") ~ "In Field",
TRUE ~ "Other"),
#coding hours to numeric
telecommute_hours = case_when(
telecommute_hours == "never" ~ 0,
telecommute_hours == "1 day/week" ~ 8,
telecommute_hours == "40 hours" ~ 40
)
)
#print to datatable
%>% datatable(
#creating a new table called "sites_cleaned", starting with the old table "sites"
sites_cleaned <- sites %>%
#switching the order of names that are backwards
mutate(Employee = if_else(Employee == "Knope, Leslie", "Leslie Knope", Employee)) %>%
#seperate employee names into two columns
separate(Employee, into = c("first_name", "last_name")) %>%
#renaming column names to standard format
rename(location = Location,
telecommute_hours =`Telecommute?`,
hire_date = `Hire Date`) %>%
#changing first and last names and locations to Title Case
mutate(first_name = str_to_title(first_name),
last_name = str_to_title(last_name),
location = str_to_title(location)) %>%
#coding location data to three categories, In Office, In Field, or Other
mutate(location = case_when(
str_detect(location, "City Hall") ~ "In Office",
str_detect(location, "Field") ~ "In Field",
str_detect(location, "Street") ~ "In Field",
TRUE ~ "Other"),
#coding hours to numeric
telecommute_hours = case_when(
telecommute_hours == "never" ~ 0,
telecommute_hours == "1 day/week" ~ 8,
telecommute_hours == "40 hours" ~ 40
)
)
#print to datatable
sites_cleaned%>% datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = 'excel',
searching = FALSE))
sites_cleaned
#build sample data table
visits <- tribble(
~"Employee", ~"Phone Visits", ~"Office Visits", ~"Online Visits",
"Danielle", 6, 11, 23,
"Ramona", 11, 5, 18,
"Ross", 10, 10, 10
)
#print to datatable
visits%>% datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = 'excel',
searching = FALSE,
caption = "Visits to the Dept. of Retirement Services in a given month"
))
#build sample data table
visits <- tribble(
~"Employee", ~"Phone Visits", ~"Office Visits", ~"Online Visits",
"Danielle", 6, 11, 23,
"Ramona", 11, 5, 18,
"Ross", 10, 10, 10
)
#print to datatable
visits%>% datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = 'excel',
searching = FALSE),
caption = "Visits to the Dept. of Retirement Services in a given month"
)
desc_visits <- pivot_visits %>%
group_by(`Visit Type`) %>%
summarise(mean(`Number of Visits`))
#We have already loaded the "tidyverse" library so we do not have to do it again
#we are editing the "visits" table already created by storing it in a new table pivot_visits
pivot_visits <- visits %>%
#using pivot_longer on every column except "employee" and setting the name of the new columns
pivot_longer(-Employee, names_to = "Visit Type", values_to = "Number of Visits")
knitr::kable(pivot_visits, caption = "Visits to the Dept. of Retirement Services in a given month")
desc_visits <- pivot_visits %>%
group_by(`Visit Type`) %>%
summarise(mean(`Number of Visits`))
desc_visits
desc_visits <- pivot_visits %>%
group_by(`Visit Type`) %>%
summarise(`Avg Visits` = mean(`Number of Visits`))
desc_visits
desc_visits <- pivot_visits %>%
group_by(`Visit Type`) %>%
summarise(`Avg Visits` = mean(`Number of Visits`),
`Total Visits` = sum(`Number of Visits`))
desc_visits <- pivot_visits %>%
group_by(`Visit Type`) %>%
summarise(`Avg Visits` = mean(`Number of Visits`),
`Total Visits` = sum(`Number of Visits`))
library(tidyverse)
library(DT)
sites <- tribble(
~"Employee", ~"Location", ~"Telecommute?", ~"Hire Date",
"ron swanson", "Pawnee City Hall", "never", "Unknown",
"Knope, Leslie", "Field Duty", "1 day/week", "2011-6-1",
"Andy Dwyer", "sullivan street pit", "40 hours", "March 1, 2013",
"Jerry Gergich", "City Hall", "never", "6/1/1985",
"Garry Gergich", "City Hall", "never", "6/1/1985",
"ben wyatt", "Partridge, Minnesota","" , "Jan. 1, 2010"
)
sites %>% datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = 'excel',
searching = FALSE))
#creating a new table called "sites_cleaned", starting with the old table "sites"
sites_cleaned <- sites %>%
#switching the order of names that are backwards
mutate(Employee = if_else(Employee == "Knope, Leslie", "Leslie Knope", Employee)) %>%
#seperate employee names into two columns
separate(Employee, into = c("first_name", "last_name")) %>%
#renaming column names to standard format
rename(location = Location,
telecommute_hours =`Telecommute?`,
hire_date = `Hire Date`) %>%
#changing first and last names and locations to Title Case
mutate(first_name = str_to_title(first_name),
last_name = str_to_title(last_name),
location = str_to_title(location)) %>%
#coding location data to three categories, In Office, In Field, or Other
mutate(location = case_when(
str_detect(location, "City Hall") ~ "In Office",
str_detect(location, "Field") ~ "In Field",
str_detect(location, "Street") ~ "In Field",
TRUE ~ "Other"),
#coding hours to numeric
telecommute_hours = case_when(
telecommute_hours == "never" ~ 0,
telecommute_hours == "1 day/week" ~ 8,
telecommute_hours == "40 hours" ~ 40
)
)
#print to datatable
sites_cleaned%>% datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = 'excel',
searching = FALSE))
#build sample data table
visits <- tribble(
~"Employee", ~"Phone Visits", ~"Office Visits", ~"Online Visits",
"Danielle", 6, 11, 23,
"Ramona", 11, 5, 18,
"Ross", 10, 10, 10
)
#print to datatable
visits%>% datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = 'excel',
searching = FALSE),
caption = "Visits to the Dept. of Retirement Services in a given month by employee"
)
rpivotTable::rpivotTable(visits, width = "60%", height = "60%")
#We have already loaded the "tidyverse" library so we do not have to do it again
#we are editing the "visits" table already created by storing it in a new table pivot_visits
pivot_visits <- visits %>%
#using pivot_longer on every column except "employee" and setting the name of the new columns
pivot_longer(-Employee, names_to = "Visit Type", values_to = "Number of Visits")
knitr::kable(pivot_visits, caption = "Visits to the Dept. of Retirement Services in a given month")
rpivotTable::rpivotTable(pivot_visits, width = "60%", height = "400px")
desc_visits <- pivot_visits %>%
group_by(`Visit Type`) %>%
summarise(`Avg Visits` = mean(`Number of Visits`),
`Total Visits` = sum(`Number of Visits`))
desc_visits
desc_visits <- pivot_visits %>%
group_by(`Visit Type`) %>%
summarise(`Avg Visits` = mean(`Number of Visits`),
`Total Visits` = sum(`Number of Visits`),
`Std Dev of Visits` = sd(`Number of Visits`))
desc_visits
webshot::install_phantomjs()
install.packages("wordcountaddin")
devtools::install_github("wordcountaddin")
devtools::install_github("https://github.com/benmarwick/wordcountaddin")
library(wordcountaddin)
wordcountaddin::text_stats("index.Rmd"))
wordcountaddin::text_stats("index.Rmd")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
254 + 1036 + 1691 + 1313 + 1236 + 749 + 888 + 241
